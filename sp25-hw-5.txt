CISC 3300 S25 
Homework 5 
1. What is the DOM? What is meant by the DOM tree?


DOM (Document Object Model) is a programming interface for web documents and it represents the structure of an HTML or XML document as a tree of objects that can be manipulated with JavaScript. As a browser loads a web page, it creates a model of that page. The model is called a DOM tree, and it is stored in the browsers’ memory. It is a hierarchical representation of the HTML document and the four main types of nodes are the following: document node → the page, element node → individual elements, attribute nodes → or attributes, and text nodes → or text. 


2. What is an XSS attack? How do they work? How can you guard against them?


XSS attack is called Cross-Site Scripting attack and it is a security vulnerability in which attackers can inject malicious scripts into web application - these scripts run in the browser of the user and  the attacker can steal sensitive data (cookies) from the user without the user even knowing. XSS attacks work by inserting harmful JavaScript code into a webpage, so when another user visits the page, the browser unknowingly executes the script. An example of this could be an attacker injecting  a script into a comment in a social media comment section that steals login information when clicked on by another user. XSS attacks can even make the attackers gain full control of your computer. To guard against XSS attacks, you should be  very careful  when handling content as HTML. In most cases, user-generated input should not be displayed as raw HTML because it increases the risk of XSS attacks. Allowing users to submit and display their own content can make a website vulnerable to malicious code injections.


 3. What is an event in JavaScript? What kind of events can you respond to with code?


An event is an action or occurrence that takes place in a webpage and can be detected and responded to using code; events allow developers to create dynamic interactions between the user and the web page. Some kinds of events you can respond to with code are the following: keyboard (input, keydown, keyup, keypress), mouse (click, doubleclick, mouseup, mousedonwn, mouseover, mousemove), form (submit, select, change), and document (ready, load, unload).




 4. How does a DOM eventListener work? What are the parameters it is expecting? 


A DOM eventListener is a method that allows an element to listen for a specific event and run a function when that event happens. This is done using the addEventListener() method. It takes three parameters: the event type (such as "click", "keydown", or "scroll"), the callback function (which executes when the event occurs), and an optional useCapture parameter (which determines whether the event is handled in the bubbling or capturing phase). Event listeners make it possible to attach multiple functions to a single event without overwriting existing handlers, allowing for more interactive and dynamic webpages.




5. What is jQuery? Why use it? How do we load jQuery onto a page? 




JQuery is a JavaScript library designed to simplify HTML, DOM (Document Object Model) manipulation, event handling, CSS animation, and AJAX handling. The jQuery library shortened the syntax and simplified the code which made development faster and more efficient when doing common HTML/CSS/JS tasks. We would use it because using jQuery offers several advantages, such as simpler syntax, cross-browser compatibility, easy AJAX handling, and built-in animations. We load jQuery onto a page in two ways; the first way is by including it from a Content Delivery Network(CDN) which is recommended because it ensures  faster loading time and caching and the other way is to downloading jQuery and hosting it locally - this way is slower but good for if you wantto use jQuery without an internet connection.




6. What is AJAX? JSON? The HTTP method types and what they do? 


AJAX (Asynchronous JavaScript and XML) is a web development technique that allows webpages to send and receive data from a server without reloading the page, making applications more dynamic and responsive. It is commonly used for features like live search, chat updates, and background data fetching. JSON (JavaScript Object Notation) is a lightweight data format used to store and exchange data between a client and a server. It is widely used in AJAX because it is easy to read, write, and parse in JavaScript. When making AJAX requests, different HTTP methods are used: GET retrieves data from the server, POST sends new data to the server (such as form submissions), PUT updates existing data, and DELETE removes a resource from the server. By combining AJAX, JSON, and HTTP methods, developers can create fast, interactive, and efficient web applications.




7. Write some data in the JSON format. You can use this site https://jsonformatter.org/ to check if it’s in the right format, making use of the “validate” button. 
8. Create a webpage that contains an unordered list element which contains several list item elements. If a list item is clicked, change the color of it. Each list item should have a different color. 
9. Create a webpage that contains a button. Write jQuery code so that when the button is clicked an HTTP GET request is sent to a PHP backend. From the PHP backend(reference the php-project code found here: 
https://github.com/cisc3300/SP25-lecture-code/tree/main/2-20-lecture) return a json encoded associative array of data pertaining to your fake business. Make sure that it has at least a name and a price. Use the response returned on the frontend to create a div element for each piece of data, show the name and price of each item and give the elements some style. 
10. Create a webpage that contains a form element with some input elements. Write jQuery code so that when the form is submitted an HTTP POST request is sent to a PHP backend. From the PHP backend(reference the php-project code found here: 
https://github.com/cisc3300/SP25-lecture-code/tree/main/2-20-lecture) return an associative array with data for a success message that is JSON encoded. Use the response to create an HTML element that contains the message data, give it some proper styling.